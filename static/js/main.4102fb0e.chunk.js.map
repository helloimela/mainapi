{"version":3,"sources":["components/Preview.js","components/Question.js","components/Board.js","components/Result.js","components/Game.js","index.js"],"names":["Preview","maxNum","arr","i","push","key","className","this","props","squares","value","id","num","renderSquare","renderRow","Component","Question","question","questions","forEach","q","totalQuestions","renderContent","data-answer","onClick","Board","pos","length","event","screen","navClick","renderQuestion","position","Result","search","find","status","count","score","highlight","console","log","style","display","renderHighlight","renderBingo","window","location","reload","Game","state","Array","fill","map","_","showCalculateBtn","slice","target","dataset","answer","showBtn","setState","nav","current","max","newValue","newScore","lines","a","b","c","d","e","calculateWinner","handleClick","calculateScore","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.4102fb0e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './components.css';\r\n\r\nclass Preview extends Component {\r\n\r\n  renderSquare(maxNum) {\r\n    let arr = [];\r\n    for (let i=(maxNum -5); i<maxNum; i++) {\r\n      arr.push(\r\n      <button \r\n        key={`square-${i}`} \r\n        className={`square ${this.props.squares[i].value}`}>\r\n          {this.props.squares[i].id + 1 }\r\n      </button>);\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  renderRow(num){\r\n    return <div className=\"board-row\">\r\n      {this.renderSquare(num)}\r\n    </div>\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"preview col-12 text-center\">\r\n        {this.renderRow(5)}\r\n        {this.renderRow(10)}\r\n        {this.renderRow(15)}\r\n        {this.renderRow(20)}\r\n        {this.renderRow(25)}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default Preview;","import React, { Component } from 'react';\r\nimport { questions } from '../data/questions.json';\r\nimport './components.css';\r\n\r\nclass Question extends Component {\r\n\r\n  renderContent(){\r\n    let question;\r\n    questions.forEach( q => {\r\n      if(q.id === this.props.value.id) {\r\n        question = q.question;\r\n      }\r\n    })\r\n    return question\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className={this.props.value.value}>\r\n        <p>Question <span className=\"h4 display\">{this.props.value.id +1}</span> of {this.props.totalQuestions}</p>\r\n        <div className=\"question\">\r\n          <p>{this.renderContent()}</p>\r\n          <button className=\"answer yes\" data-answer=\"Yes\" onClick={this.props.onClick}>Yes</button>\r\n          <button className=\"answer no\" data-answer=\"No\" onClick={this.props.onClick}>No</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default Question;","import React, { Component } from 'react';\r\nimport Question from './Question';\r\nimport './components.css';\r\n\r\nclass Board extends Component {\r\n  renderQuestion(pos){\r\n    return <Question\r\n    key={pos}\r\n    value={this.props.squares[pos]}\r\n    totalQuestions={this.props.squares.length}\r\n    onClick={(event) => this.props.onClick(event, pos)}/>\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='board row justify-content-center'>\r\n        <button className={`navBtn prev ${this.props.screen}`} onClick={()=>this.props.navClick('prev')}>Prev</button>\r\n        <div className='col-11'>\r\n          {this.renderQuestion(this.props.position)}\r\n        </div>\r\n        <button className={`navBtn next ${this.props.screen}`} onClick={()=>this.props.navClick('next')}>Next</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;","import React, { Component } from 'react';\r\nimport { questions } from '../data/questions.json';\r\nimport './components.css';\r\n\r\nclass Result extends Component {\r\n  renderQuestion(search) {\r\n    const q = questions.find(({id}) => id === search)\r\n    const status = this.props.squares[search].value;\r\n    \r\n    return <div className={`col-2 ${status}`}>{q.question}</div>\r\n  }\r\n  renderBingo(i) {\r\n    let count = i;\r\n    return <div className='bingo row justify-content-center'>\r\n      {this.renderQuestion(count)}\r\n      {this.renderQuestion(count+1)}\r\n      {this.renderQuestion(count+2)}\r\n      {this.renderQuestion(count+3)}\r\n      {this.renderQuestion(count+4)}\r\n    </div>\r\n  }\r\n\r\n  renderHighlight(score){\r\n    let highlight;\r\n    console.log(score);\r\n    switch(true) {\r\n      case (score < 1) : highlight = 'aduch kok 0, ayo main lagi dung';\r\n      break;\r\n      case (score < 3) : highlight = 'Lumayannn, tingkatkan!';\r\n      break;\r\n      case (score < 5) : highlight = 'Aaaw sohib banget';\r\n      break;\r\n      case (score < 9) : highlight = 'Uwuwuw banyak kenangan';\r\n      break;\r\n      case (score <= 12) : highlight = '...speechless...bagaikan roti dan mentega selalu bersama';\r\n      break;\r\n    default: highlight = 'Mantap gan!'\r\n    }\r\n    return highlight;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='finalResult' style={{display: this.props.screen === 'result' ? 'block' : 'none' }}>\r\n        <h5 className='display text-center'>greg-o-bingo!</h5>\r\n        <h5 className='title'>Pernah ngapain aja bareng Ian/Pur/Greg bingo score:</h5>\r\n        <div className='row'>\r\n          <div className='col-3 text-right score-box'>\r\n            {this.props.score}\r\n          </div>\r\n          <div className='col-9 highlight-text'>\r\n            {this.renderHighlight(this.props.score)}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className='bingo-wrapper'>\r\n          {this.renderBingo(0)}\r\n          {this.renderBingo(5)}\r\n          {this.renderBingo(10)}\r\n          {this.renderBingo(15)}\r\n          {this.renderBingo(20)}\r\n        </div>\r\n        <button className='button-primary' onClick={() => window.location.reload(false)}>Restart Game</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Result;","import React, { Component } from 'react';\r\nimport Preview from './Preview';\r\nimport Board from './Board';\r\nimport Result from './Result';\r\nimport './components.css';\r\n\r\nclass Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      squares: Array(25).fill().map((_, i) => {\r\n        return {\r\n          id : i,\r\n          value : 'O'\r\n        }\r\n      }),\r\n      score: 0,\r\n      position:0,\r\n      screen: 'start',\r\n      showCalculateBtn:'hide'\r\n    };\r\n  }\r\n\r\n  handleClick(event, i){\r\n    const squares = this.state.squares.slice();\r\n    squares[i].value = event.target.dataset.answer;\r\n    let showBtn = this.state.showCalculateBtn;\r\n\r\n    if(i === squares.length - 1) {\r\n      showBtn = 'show';\r\n    }\r\n    \r\n    this.setState({\r\n      squares: squares,\r\n      showCalculateBtn: showBtn\r\n    })\r\n  }\r\n\r\n  navClick(nav){\r\n    const current = this.state.position;\r\n    const max = this.state.squares.length;\r\n    let newValue = nav === 'next' ? current + 1 : current - 1;\r\n    \r\n    let screen = this.state.screen;\r\n    \r\n    if(newValue === 0) {\r\n      screen = 'start';\r\n    } else if(newValue === max -1) {\r\n      screen = 'end';\r\n    } else {\r\n      screen = 'ongoing';\r\n    }\r\n\r\n    if(newValue >= 0 ) {\r\n      this.setState({\r\n        position: newValue,\r\n        screen: screen\r\n      })\r\n    }\r\n    \r\n  }\r\n\r\n  calculateScore() {\r\n    let newScore = calculateWinner(this.state.squares);\r\n    this.setState({\r\n      score: newScore,\r\n      screen: 'result'\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='container-fluid'>\r\n        <div className='row justify-content-center'>\r\n          <div className='col-11 col-md-3'>\r\n            <h4 className='display text-center mt-1'>greg-o-bingo!</h4>\r\n            <h3 className='pageTitle'>Apa aja aktivitas yg pernah kamu lakuin bareng Ian/Pur/Greg?!</h3>\r\n            <p className='text-center'>Choose <span className=\"h4 display\">yes</span> or <span className=\"h4 display\">no</span> and see how many bingos you get at the end of the quiz!</p>\r\n            <Board \r\n              squares = {this.state.squares}\r\n              onClick = {(event, i) => this.handleClick(event, i)}\r\n              navClick = {(nav) => this.navClick(nav)}\r\n              position = {this.state.position}\r\n              screen = {this.state.screen}/>\r\n            \r\n          </div>\r\n          <div className='result col-12' style={{display: this.state.showCalculateBtn === 'show' ? 'block' : 'none' }}>\r\n            <button \r\n              className='calculateBtn'\r\n              onClick={() => this.calculateScore()}>\r\n              See result\r\n            </button>\r\n          </div>\r\n          <Preview\r\n            squares = {this.state.squares}/>\r\n          <Result \r\n            screen = {this.state.screen}\r\n            score = {this.state.score}\r\n            squares = {this.state.squares}\r\n          />\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  let score = 0;\r\n  const lines = [\r\n    [0, 1, 2, 3, 4],\r\n    [5, 6, 7, 8, 9],\r\n    [10, 11, 12, 13, 14],\r\n    [15, 16, 17, 18, 19],\r\n    [20, 21, 22, 23, 24],\r\n    [0, 5, 10, 15, 20],\r\n    [1, 6, 11, 16, 21],\r\n    [2, 7, 12, 17, 22],\r\n    [3, 8, 13, 18, 23],\r\n    [4, 9, 14, 19, 24],\r\n    [0, 6, 12, 18, 24],\r\n    [4, 8, 12, 16, 20]\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c, d, e] = lines[i];\r\n    if (squares[a].value === 'Yes' && squares[b].value === 'Yes' && squares[c].value === 'Yes' && squares[d].value === 'Yes' && squares[e].value === 'Yes') {\r\n      score += 1;\r\n    }\r\n  }\r\n  return score;\r\n}\r\n\r\nexport default Game;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport Game from './components/Game'\r\nimport './index.css';\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Router basename={process.env.PUBLIC_URL}><Game /></Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}